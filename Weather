<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Colorful Weather App</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }
        
        body {
            background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }
        
        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        .weather-container {
            background: rgba(255, 255, 255, 0.25);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            width: 100%;
            max-width: 450px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
            text-align: center;
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .search-box {
            display: flex;
            gap: 10px;
            margin-bottom: 25px;
        }
        
        .search-box input {
            flex: 1;
            padding: 15px 20px;
            border: none;
            border-radius: 50px;
            background: rgba(255, 255, 255, 0.3);
            color: white;
            font-size: 16px;
            outline: none;
            transition: all 0.3s;
        }
        
        .search-box input:focus {
            background: rgba(255, 255, 255, 0.4);
            box-shadow: 0 0 15px rgba(255, 255, 255, 0.3);
        }
        
        .search-box input::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }
        
        .search-box button {
            padding: 15px 25px;
            border: none;
            border-radius: 50px;
            background: linear-gradient(45deg, #ff6b6b, #ffa3a3);
            color: white;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: all 0.3s;
            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
        }
        
        .search-box button:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(255, 107, 107, 0.4);
        }
        
        .weather-info {
            display: none;
            animation: fadeIn 1s ease;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .location {
            font-size: 28px;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
        }
        
        .date {
            font-size: 16px;
            margin-bottom: 25px;
            opacity: 0.9;
        }
        
        .temperature {
            font-size: 80px;
            font-weight: bold;
            margin: 20px 0;
            background: linear-gradient(45deg, #ffffff, #e0e0e0);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        }
        
        .weather {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
            margin-bottom: 30px;
        }
        
        .weather-icon {
            width: 80px;
            height: 80px;
            filter: drop-shadow(2px 2px 5px rgba(0, 0, 0, 0.2));
        }
        
        .description {
            font-size: 22px;
            text-transform: capitalize;
            font-weight: 500;
        }
        
        .details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
        
        .detail-box {
            background: rgba(255, 255, 255, 0.15);
            padding: 20px;
            border-radius: 15px;
            backdrop-filter: blur(5px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s;
        }
        
        .detail-box:hover {
            transform: translateY(-5px);
            background: rgba(255, 255, 255, 0.25);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        }
        
        .detail-box div:first-child {
            font-size: 14px;
            margin-bottom: 8px;
            opacity: 0.8;
        }
        
        .detail-box div:last-child {
            font-size: 20px;
            font-weight: bold;
        }
        
        .error-message {
            color: #ffebee;
            margin-top: 20px;
            padding: 15px;
            background: rgba(255, 88, 88, 0.3);
            border-radius: 10px;
            display: none;
            animation: shake 0.5s;
        }
        
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            20%, 60% { transform: translateX(-5px); }
            40%, 80% { transform: translateX(5px); }
        }
        
        .welcome-message {
            margin: 30px 0;
            font-size: 20px;
            color: rgba(255, 255, 255, 0.9);
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
        }
        
        .welcome-icon {
            font-size: 50px;
            margin-bottom: 15px;
            color: rgba(255, 255, 255, 0.7);
        }
        
        @media (max-width: 500px) {
            .weather-container {
                padding: 25px;
            }
            
            .temperature {
                font-size: 70px;
            }
            
            .weather-icon {
                width: 70px;
                height: 70px;
            }
            
            .search-box {
                flex-direction: column;
            }
            
            .search-box button {
                width: 100%;
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <div class="weather-container">
        <div class="search-box">
            <input type="text" placeholder="Enter city name..." id="city-input">
            <button id="search-btn"><i class="fas fa-search"></i> Search</button>
        </div>

        <div class="welcome-message" id="welcome-message">
            <div class="welcome-icon"><i class="fas fa-cloud-sun"></i></div>
            <div>Search for any city to see colorful weather info!</div>
        </div>

        <div class="weather-info" id="weather-info">
            <div class="location" id="location"></div>
            <div class="date" id="date"></div>
            <div class="temperature" id="temperature"></div>
            <div class="weather">
                <img src="" alt="Weather icon" class="weather-icon" id="weather-icon">
                <div class="description" id="description"></div>
            </div>
            <div class="details">
                <div class="detail-box">
                    <div><i class="fas fa-tint"></i> Humidity</div>
                    <div id="humidity"></div>
                </div>
                <div class="detail-box">
                    <div><i class="fas fa-wind"></i> Wind</div>
                    <div id="wind"></div>
                </div>
            </div>
        </div>

        <div class="error-message" id="error-message">
            <i class="fas fa-exclamation-circle"></i> City not found. Please try again!
        </div>
    </div>

    <script>
        // DOM Elements
        const cityInput = document.getElementById('city-input');
        const searchBtn = document.getElementById('search-btn');
        const weatherInfo = document.getElementById('weather-info');
        const errorMessage = document.getElementById('error-message');
        const welcomeMessage = document.getElementById('welcome-message');
        
        const locationElement = document.getElementById('location');
        const dateElement = document.getElementById('date');
        const temperatureElement = document.getElementById('temperature');
        const weatherIcon = document.getElementById('weather-icon');
        const descriptionElement = document.getElementById('description');
        const humidityElement = document.getElementById('humidity');
        const windElement = document.getElementById('wind');

        // API Key - Replace with your own from OpenWeatherMap
        const apiKey = 'ca695dcbc66c5fa3d0cb955033fd918f';

        // Set current date
        function setCurrentDate() {
            const options = { 
                weekday: 'long', 
                month: 'long', 
                day: 'numeric', 
                year: 'numeric' 
            };
            dateElement.textContent = new Date().toLocaleDateString('en-US', options);
        }

        // Fetch weather data
        async function getWeatherData(city) {
            try {
                const response = await fetch(
                    `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`
                );
                
                if (!response.ok) {
                    throw new Error('City not found');
                }
                
                const data = await response.json();
                displayWeather(data);
            } catch (error) {
                showError(error.message);
            }
        }

        // Display weather data
        function displayWeather(data) {
            welcomeMessage.style.display = 'none';
            locationElement.textContent = `${data.name}, ${data.sys.country}`;
            temperatureElement.textContent = `${Math.round(data.main.temp)}°C`;
            descriptionElement.textContent = data.weather[0].description;
            humidityElement.textContent = `${data.main.humidity}%`;
            windElement.textContent = `${Math.round(data.wind.speed * 3.6)} km/h`;
            weatherIcon.src = `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;
            
            setCurrentDate();
            weatherInfo.style.display = 'block';
            errorMessage.style.display = 'none';
            
            // Change background based on weather
            changeBackground(data.weather[0].main);
        }

        // Change background based on weather condition
        function changeBackground(weatherCondition) {
            const colors = {
                'Clear': ['#ff9a9e', '#fad0c4', '#fbc2eb'],
                'Clouds': ['#a1c4fd', '#c2e9fb', '#a6c1ee'],
                'Rain': ['#74ebd5', '#ACB6E5', '#74ebd5'],
                'Thunderstorm': ['#0f0c29', '#302b63', '#24243e'],
                'Snow': ['#e0eafc', '#cfdef3', '#e0eafc'],
                'default': ['#ee7752', '#e73c7e', '#23a6d5', '#23d5ab']
            };
            
            const gradientColors = colors[weatherCondition] || colors['default'];
            document.body.style.background = `linear-gradient(-45deg, ${gradientColors.join(',')})`;
        }

        // Show error message
        function showError(message) {
            welcomeMessage.style.display = 'none';
            weatherInfo.style.display = 'none';
            errorMessage.innerHTML = `<i class="fas fa-exclamation-circle"></i> ${message}`;
            errorMessage.style.display = 'block';
            
            // Error animation
            errorMessage.style.animation = 'none';
            void errorMessage.offsetWidth; // Trigger reflow
            errorMessage.style.animation = 'shake 0.5s';
        }

        // Event listeners
        searchBtn.addEventListener('click', () => {
            const city = cityInput.value.trim();
            if (city) {
                getWeatherData(city);
            }
        });

        cityInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                const city = cityInput.value.trim();
                if (city) {
                    getWeatherData(city);
                }
            }
        });
    </script>
</body>
</html>
